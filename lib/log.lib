# vim: set filetype=sh :


#
# Setup logging.
#
# If RPIGO_LOGDIR is set it will be initialized for use.
# Any arguments will be setup in $RPIGO_LOGDIR with a suitable file extension.
# All log file path names are exported as RPIGO_LOGFILES.
#
rpigo_log_setup() {
    local basename logfile

    [ -d "$RPIGO_LOGDIR" ] || rpigo_sudo mkdir -p "$RPIGO_LOGDIR"
    rpigo_sudo chmod 0750 "$RPIGO_LOGDIR"
    rpigo_sudo chown "${LOGNAME}:adm" "$RPIGO_LOGDIR"

    for basename
    do
        logfile="${RPIGO_LOGDIR}/${basename}.log"
        touch "$logfile"
        RPIGO_LOGFILES="$RPIGO_LOGFILES $logfile"
    done
    export RPIGO_LOGFILES
}


rpigo_log_timestamp() {
    if [ -z "$RPIGO_DEVELOPER" ]; then
        date +"%Y-%m-%dT%H:%M%z" 
    else
        date +"T%H:%M" 
    fi
}


rpigo_log_message() {
    local level emsg n

    level="$1"
    shift

    emsg="${FUNCNAME[0]}(): Invalid log level: $level"

    n="${RPIGO_LOGLEVEL:-0}"

    case "$level" in
        x) [ $n -ge 5 ] || return 0 ;;
        d) [ $n -ge 4 ] || return 0 ;;
        i) [ $n -ge 3 ] || return 0 ;;
        w) [ $n -ge 2 ] || return 0 ;;
        e) [ $n -ge 1 ] || return 0 ;;
        wtf) ;; # always permit
        *)
            rpigo_error "$emsg"
            # also force an output.
            echo "$emsg" 1>&2
            return 64 # EX_USAGE
    esac

    echo "$(basename $0)/${level}(pid=$$, $(rpigo_log_timestamp)):" $* | tee -a ${RPIGO_LOGFILES:-/dev/null} 1>&2
}


rpigo_trace() {
    rpigo_log_message x $*
}


rpigo_debug() {
    rpigo_log_message d $*
}


rpigo_info() {
    rpigo_log_message i $*
}


rpigo_warn() {
    rpigo_log_message w $*
}


rpigo_error() {
    rpigo_log_message e $*
}


rpigo_fatal() {
    local es opt

    es=1

    while getopts "e:" opt; do
        case $opt in
            e)
                es=$OPTARG
                ;;
            \?)
                echo "${FUNCNAME[0]}(): Invalid option: -$OPTARG" 1>&2
                return $OPTERR
                ;;
        esac
    done
    shift `expr $OPTIND - 1`

    rpigo_log_message wtf $*
    rpigo_warn "Aborting program with exit status $es."
    exit $es
}

