# vim: set filetype=sh :
#-
# Copyright (c) 2014-current, Terry Mathew Poulin <BigBoss1964@gmail.com>
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
# 
#     http://www.apache.org/licenses/LICENSE-2.0
# 
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


#
# util.lib -- duh!
#

[ -z "$RPIGO_LIB_UTIL_INCLUDED" ] || return 0
RPIGO_LIB_UTIL_INCLUDED=included

# Filter that strips leading zeros.
#
# Use -l for left strip (default) or -r right strip.
#
# TODO: make -lr an error or actually work.
#
strip_zeros() {
    local opt pattern default_pattern

    default_pattern='^0*'
    pattern="$default_pattern"

    while getopts "lr" opt; do
        case $opt in
            l)
                pattern="$default_pattern"
                ;;
            r)
                pattern='0*$'
                ;;
            \?)
                echo "Invalid option: -$OPTARG" >&2
                return $OPTERR
                ;;
        esac
    done

    sed -e "s/${pattern}//"
}


# Prints the serial number for this device.
#
# If /proc/cpuinfo contains the field "Serial" it will be used. This should
# work on the Raspberry Pi and a number of ARM boards but not on PCs.
#
# If that is not present but dmidecode is in path: attempt to print the 
# system-serial-number from the DMI/SMBIOS table.
#
# Otherwise returns 'unknown'.
#
rpigo_serial() {
    if grep -q Serial /proc/cpuinfo; then
        grep Serial /proc/cpuinfo  | awk '{ print $3 }'
    elif type dmidecode >/dev/null 2>&1; then
        dmidecode --string system-serial-number
    else
        echo unknown
    fi
}


rpigo_hostname() {
    hostname $*
}


# Prints a friendly unit name.
#
# This is either found in name.conf or generated from the serial number.
#
rpigo_unitname() {
    local namefile

    namefile="${RPIGO_CONFIGDIR}/name.conf"

    if [ -f "$namefile" ]; then
        cat "$namefile"
    else
        echo "rpi$(rpigo_serial | strip_zeros)"
    fi
}

